#!/usr/bin/env python
from ursus.utils import import_class, import_config
from ursus.config import config as default_config
from watchdog.observers import Observer
import argparse
import coloredlogs
import copy
import time


parser = argparse.ArgumentParser(
    prog='ursus',
    description='Static site generator',
    epilog='Made with ❤️ in Berlin'
)
parser.add_argument(
    '-c', '--config',
    help="Path to a Python config file or module. The `config` variable will be imported from that file."
)
parser.add_argument(
    '-w', '--watch', action='store_true',
    help="Watch <content_path> and <templates_path> for changes"
)
args = parser.parse_args()

user_config = import_config(args.config) if args.config else {}
config = {
    **default_config,
    **user_config,
}

coloredlogs.install(**config['logging'])

if args.watch:
    observer = Observer()


for generator_name, generator_config in config['generators']:
    generator_class = import_class(generator_name)
    local_config = copy.deepcopy(config)
    local_config.pop('generators')
    local_config.update(generator_config)
    generator = generator_class(**local_config)

    generator.generate()

    if args.watch:
        for path in generator.get_watched_paths():
            observer.schedule(
                generator.get_observer_event_handler(), path, recursive=True
            )

if args.watch:
    observer.start()
    try:
        while True:
            time.sleep(1)
    finally:
        observer.stop()
        observer.join()
